# AssayBio 官网 - 主站点配置
# 企业级生产环境虚拟主机配置

# ====================
# HTTP to HTTPS 重定向
# ====================
server {
    listen 80;
    listen [::]:80;
    server_name assaybio.com www.assaybio.com;
    
    # 健康检查端点（不重定向）
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
    
    # Let's Encrypt 证书验证
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri $uri/ =404;
    }
    
    # 所有其他请求重定向到HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# ====================
# HTTPS 主站点配置
# ====================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.assaybio.com;
    
    # SSL证书配置
    ssl_certificate /etc/letsencrypt/live/www.assaybio.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.assaybio.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/www.assaybio.com/chain.pem;

    # 网站根目录
    root /usr/share/nginx/html;
    index index.html index.htm;

    # 字符集
    charset utf-8;

    # ====================
    # 安全头部
    # ====================
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()" always;
    
    # CSP策略
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' *.assaybio.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: *.assaybio.com; connect-src 'self' *.assaybio.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self'" always;

    # ====================
    # 限流配置
    # ====================
    limit_req zone=general burst=20 nodelay;
    limit_conn conn_limit_per_ip 10;

    # ====================
    # 健康检查端点
    # ====================
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header X-Health-Check-Time $time_iso8601;
    }

    # 详细健康检查
    location /health/detailed {
        access_log off;
        proxy_pass http://health_check/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # ====================
    # 静态文件处理
    # ====================
    
    # 主页
    location = / {
        try_files /index.html =404;
        
        # 缓存设置
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        
        # 压缩
        gzip_static on;
    }

    # HTML文件
    location ~* \.html$ {
        try_files $uri $uri/ =404;
        
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        gzip_static on;
        
        # 模板变量替换（如果需要）
        # sub_filter '{{CDN_URL}}' 'https://cdn.assaybio.com';
        # sub_filter_once off;
    }

    # CSS 文件
    location ~* \.css$ {
        try_files $uri =404;
        
        expires 1y;
        add_header Cache-Control "public, immutable";
        gzip_static on;
        
        # CSS 特定的MIME类型
        add_header Content-Type "text/css; charset=utf-8";
    }

    # JavaScript 文件
    location ~* \.js$ {
        try_files $uri =404;
        
        expires 1y;
        add_header Cache-Control "public, immutable";
        gzip_static on;
        
        # JS 特定的MIME类型
        add_header Content-Type "application/javascript; charset=utf-8";
    }

    # 图片文件
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|avif)$ {
        try_files $uri =404;
        
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # 图片优化头部
        add_header Vary Accept;
        
        # WebP 支持检测
        location ~* \.(?:jpe?g|png)$ {
            try_files $uri$webp_suffix $uri =404;
        }
    }

    # 字体文件
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        try_files $uri =404;
        
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }

    # 数据文件（JSON等）
    location ~* \.(json|xml|txt)$ {
        try_files $uri =404;
        
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        gzip_static on;
    }

    # 文档和媒体文件
    location ~* \.(pdf|doc|docx|ppt|pptx|xls|xlsx|zip|rar|7z)$ {
        try_files $uri =404;
        
        expires 30d;
        add_header Cache-Control "public";
        
        # 安全下载头部
        add_header Content-Disposition "attachment";
        add_header X-Content-Type-Options nosniff;
    }

    # ====================
    # 特殊目录处理
    # ====================
    
    # 产品图片目录
    location /images/products/ {
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # 新闻图片目录
    location /images/news/ {
        try_files $uri =404;
        expires 6M;
        add_header Cache-Control "public";
    }

    # 文档目录
    location /data/assets/documents/ {
        try_files $uri =404;
        expires 1M;
        add_header Cache-Control "public";
        add_header Content-Disposition "attachment";
    }

    # ====================
    # API代理（如果需要）
    # ====================
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://assaybio_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # ====================
    # 缓存清理端点
    # ====================
    location /admin/cache/purge {
        allow 192.3.11.106;  # 服务器IP
        allow 127.0.0.1;     # 本地
        deny all;
        
        return 200 "Cache purged\n";
        add_header Content-Type text/plain;
    }

    # ====================
    # 错误页面
    # ====================
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # ====================
    # 隐藏敏感文件
    # ====================
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(env|log|config)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # ====================
    # WebP 支持
    # ====================
    map $http_accept $webp_suffix {
        "~image/webp" ".webp";
        default "";
    }

    # ====================
    # 机器人和爬虫配置
    # ====================
    location = /robots.txt {
        try_files $uri =404;
        access_log off;
        log_not_found off;
    }
    
    location = /sitemap.xml {
        try_files $uri =404;
        expires 1d;
        add_header Cache-Control "public, must-revalidate";
    }

    # 阻止恶意爬虫
    if ($http_user_agent ~* (AhrefsBot|MJ12bot|SemrushBot)) {
        return 403;
    }
}

# ====================
# 裸域名重定向到 www
# ====================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name assaybio.com;
    
    ssl_certificate /etc/letsencrypt/live/www.assaybio.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.assaybio.com/privkey.pem;
    
    return 301 https://www.assaybio.com$request_uri;
}