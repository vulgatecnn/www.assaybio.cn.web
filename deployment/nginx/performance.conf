# AssayBio 性能优化配置
# 企业级高性能Web服务器配置

# ====================
# 连接优化
# ====================

# Keepalive连接优化
keepalive_timeout 30;
keepalive_requests 1000;

# 客户端请求优化
client_header_timeout 30;
client_body_timeout 30;
client_header_buffer_size 4k;
large_client_header_buffers 8 16k;
client_body_buffer_size 128k;
client_max_body_size 100m;

# 发送文件优化
send_timeout 30;
sendfile on;
sendfile_max_chunk 1m;
tcp_nopush on;
tcp_nodelay on;

# ====================
# 缓存配置
# ====================

# 文件描述符缓存
open_file_cache max=10000 inactive=60s;
open_file_cache_valid 30s;
open_file_cache_min_uses 2;
open_file_cache_errors on;

# 代理缓存设置
proxy_cache_path /var/cache/nginx/proxy levels=1:2 keys_zone=proxy_cache:100m 
                 max_size=1g inactive=60m use_temp_path=off;

# FastCGI缓存设置
fastcgi_cache_path /var/cache/nginx/fastcgi levels=1:2 keys_zone=fastcgi_cache:100m 
                   max_size=1g inactive=60m use_temp_path=off;

# 缓存键定义
proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
proxy_cache_valid 200 1h;
proxy_cache_valid 301 302 10m;
proxy_cache_valid 404 1m;

# ====================
# 压缩配置
# ====================

# Gzip压缩
gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_proxied any;
gzip_comp_level 6;
gzip_buffers 16 8k;
gzip_http_version 1.1;

gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    font/woff
    font/woff2
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;

# 预压缩文件支持
gzip_static on;

# ====================
# 缓冲区优化
# ====================

# 代理缓冲区
proxy_buffering on;
proxy_buffer_size 4k;
proxy_buffers 8 4k;
proxy_busy_buffers_size 8k;
proxy_temp_file_write_size 8k;

# FastCGI缓冲区
fastcgi_buffering on;
fastcgi_buffer_size 4k;
fastcgi_buffers 8 4k;
fastcgi_busy_buffers_size 8k;

# ====================
# 静态文件缓存策略
# ====================

# CSS和JS文件 - 长期缓存（带版本号）
location ~* \.(?:css|js)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header Vary Accept-Encoding;
    
    # 预压缩文件支持
    gzip_static on;
    brotli_static on;
    
    # 跨域字体支持
    location ~* \.(?:css)$ {
        add_header Access-Control-Allow-Origin "*";
    }
}

# 字体文件 - 长期缓存
location ~* \.(?:woff|woff2|ttf|eot|otf)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header Access-Control-Allow-Origin "*";
    
    # 字体预加载
    add_header Link "</fonts/main.woff2>; rel=preload; as=font; type=font/woff2; crossorigin" always;
}

# 图片文件 - 长期缓存
location ~* \.(?:ico|gif|jpe?g|png|svg|webp|avif)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header Vary Accept;
    
    # 图片优化
    location ~* \.(?:jpe?g|png)$ {
        # WebP支持
        add_header Vary Accept;
        try_files $uri$webp_suffix $uri =404;
    }
}

# 媒体文件 - 长期缓存
location ~* \.(?:mp4|webm|ogg|mp3|wav|flac|aac)$ {
    expires 1M;
    add_header Cache-Control "public";
    
    # 支持Range请求
    add_header Accept-Ranges bytes;
}

# 数据文件 - 中期缓存
location ~* \.(?:json|xml|rss)$ {
    expires 1h;
    add_header Cache-Control "public, must-revalidate";
    add_header Vary Accept-Encoding;
    gzip_static on;
}

# HTML文件 - 短期缓存
location ~* \.(?:html|htm)$ {
    expires 1h;
    add_header Cache-Control "public, must-revalidate";
    add_header Vary Accept-Encoding;
    gzip_static on;
}

# 文档文件 - 中期缓存
location ~* \.(?:pdf|doc|docx|ppt|pptx|xls|xlsx)$ {
    expires 30d;
    add_header Cache-Control "public";
    add_header Content-Disposition "inline";
}

# ====================
# 预加载和推送
# ====================

# HTTP/2推送关键资源
location = / {
    http2_push /css/index.css;
    http2_push /js/vendor-vue.js;
    http2_push /js/index.js;
    http2_push /fonts/main.woff2;
}

# DNS预解析
add_header Link "<//fonts.googleapis.com>; rel=dns-prefetch" always;
add_header Link "<//fonts.gstatic.com>; rel=dns-prefetch" always;

# ====================
# CDN和边缘缓存优化
# ====================

# CDN缓存控制
map $sent_http_content_type $cache_control {
    default "public, max-age=3600";
    ~image/ "public, max-age=31536000, immutable";
    ~font/ "public, max-age=31536000, immutable";
    ~application/javascript "public, max-age=31536000, immutable";
    ~text/css "public, max-age=31536000, immutable";
}

# Edge-Side Includes支持
location ~* \.html$ {
    ssi on;
    ssi_silent_errors on;
}

# ====================
# 负载均衡优化
# ====================

# 连接池配置
upstream_keepalive_connections 32;
upstream_keepalive_requests 1000;
upstream_keepalive_timeout 60s;

# 健康检查
upstream_fair_shm_size 1m;

# ====================
# 监控和调试
# ====================

# 性能监控头部
add_header X-Response-Time $request_time always;
add_header X-Upstream-Time $upstream_response_time always;
add_header X-Cache-Status $upstream_cache_status always;

# 实时统计
location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    allow 192.3.11.106;
    deny all;
}

# ====================
# WebP支持
# ====================
map $http_accept $webp_suffix {
    default "";
    "~*image/webp" ".webp";
}

# ====================
# Brotli压缩（如果支持）
# ====================
# brotli on;
# brotli_comp_level 6;
# brotli_min_length 1000;
# brotli_types
#     text/plain
#     text/css
#     application/javascript
#     application/json
#     text/xml
#     application/xml
#     application/atom+xml
#     image/svg+xml;

# ====================
# 微缓存配置
# ====================
map $request_method $no_cache {
    default 0;
    POST 1;
    PUT 1;
}

map $request_uri $no_cache {
    default $no_cache;
    ~*/api/* 1;
    ~*/admin/* 1;
}

# 微缓存：缓存动态内容1秒钟
proxy_cache_path /var/cache/nginx/micro levels=1:2 keys_zone=micro:10m 
                 max_size=100m inactive=1m use_temp_path=off;

location ~* \.(php|asp|aspx|jsp)$ {
    proxy_cache micro;
    proxy_cache_valid 200 1s;
    proxy_cache_bypass $no_cache;
    proxy_no_cache $no_cache;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    
    add_header X-Micro-Cache $upstream_cache_status;
}

# ====================
# 资源预取
# ====================
location = /preload {
    internal;
    proxy_pass http://backend;
    proxy_set_header X-Preload "true";
}