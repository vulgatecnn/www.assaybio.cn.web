# AssayBio企业级监控堆栈
# 包含Prometheus、Grafana、AlertManager、Loki等组件

version: '3.8'

networks:
  monitoring:
    driver: bridge
    name: assaybio-monitoring
  assaybio-network:
    external: true
    name: assaybio-network

volumes:
  prometheus_data:
    driver: local
    name: assaybio-prometheus-data
  grafana_data:
    driver: local  
    name: assaybio-grafana-data
  alertmanager_data:
    driver: local
    name: assaybio-alertmanager-data
  loki_data:
    driver: local
    name: assaybio-loki-data

services:
  # ===========================================
  # Prometheus - 指标收集和存储
  # ===========================================
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: assaybio-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./config/alerts:/etc/prometheus/alerts:ro
      - prometheus_data:/prometheus
    networks:
      - monitoring
      - assaybio-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.docker.compose.service=prometheus"
      - "monitoring.type=metrics"

  # ===========================================
  # Grafana - 数据可视化和仪表板
  # ===========================================
  grafana:
    image: grafana/grafana:10.2.0
    container_name: assaybio-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - monitoring
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.docker.compose.service=grafana"
      - "monitoring.type=visualization"

  # ===========================================
  # AlertManager - 告警管理
  # ===========================================
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: assaybio-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.docker.compose.service=alertmanager"
      - "monitoring.type=alerting"

  # ===========================================
  # Loki - 日志聚合
  # ===========================================
  loki:
    image: grafana/loki:2.9.0
    container_name: assaybio-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./config/loki.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.docker.compose.service=loki"
      - "monitoring.type=logs"

  # ===========================================
  # Promtail - 日志收集器
  # ===========================================
  promtail:
    image: grafana/promtail:2.9.0
    container_name: assaybio-promtail
    restart: unless-stopped
    volumes:
      - ./config/promtail.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    depends_on:
      - loki
    labels:
      - "com.docker.compose.service=promtail"
      - "monitoring.type=log-collector"

  # ===========================================
  # Node Exporter - 系统指标收集
  # ===========================================
  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: assaybio-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring
    labels:
      - "com.docker.compose.service=node-exporter"
      - "monitoring.type=system-metrics"

  # ===========================================
  # cAdvisor - 容器指标收集
  # ===========================================
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: assaybio-cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    networks:
      - monitoring
    labels:
      - "com.docker.compose.service=cadvisor"
      - "monitoring.type=container-metrics"

  # ===========================================
  # Uptime Kuma - 可用性监控
  # ===========================================
  uptime-kuma:
    image: louislam/uptime-kuma:1.23.8
    container_name: assaybio-uptime-kuma
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - ./data/uptime-kuma:/app/data
    networks:
      - monitoring
      - assaybio-network
    environment:
      - UPTIME_KUMA_PORT=3001
    labels:
      - "com.docker.compose.service=uptime-kuma"
      - "monitoring.type=uptime"

  # ===========================================
  # Grafana Image Renderer - 报表渲染
  # ===========================================
  renderer:
    image: grafana/grafana-image-renderer:3.8.3
    container_name: assaybio-renderer
    restart: unless-stopped
    environment:
      - ENABLE_METRICS=true
      - HTTP_PORT=8081
    networks:
      - monitoring
    labels:
      - "com.docker.compose.service=renderer"
      - "monitoring.type=utility"

  # ===========================================
  # Blackbox Exporter - 外部监控
  # ===========================================
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: assaybio-blackbox-exporter
    restart: unless-stopped
    ports:
      - "9115:9115"
    volumes:
      - ./config/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    networks:
      - monitoring
      - assaybio-network
    labels:
      - "com.docker.compose.service=blackbox-exporter"
      - "monitoring.type=external-probe"

# ===========================================
# 监控堆栈健康检查服务
# ===========================================
x-healthcheck-defaults: &healthcheck-defaults
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 60s