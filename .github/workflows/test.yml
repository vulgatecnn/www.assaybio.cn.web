name: Automated Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  # 单元测试
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: apps/website/package-lock.json

      - name: Install dependencies
        run: |
          cd apps/website
          npm ci

      - name: Run unit tests
        run: |
          cd apps/website
          npm run test:unit -- --coverage --watchAll=false

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: apps/website/coverage
          flags: unittests
          name: codecov-umbrella

  # 集成测试
  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd apps/website
          npm ci

      - name: Build application
        run: |
          cd apps/website
          npm run build

      - name: Start test server
        run: |
          cd apps/website
          npm run preview &
          sleep 10

      - name: Run integration tests
        run: |
          cd apps/website
          npm run test:integration

  # E2E测试
  e2e-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd apps/website
          npm ci

      - name: Install Playwright browsers
        run: |
          cd apps/website
          npx playwright install --with-deps

      - name: Build and start app
        run: |
          cd apps/website
          npm run build
          npm run preview &
          sleep 10

      - name: Run Playwright tests
        run: |
          cd apps/website
          npx playwright test

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: apps/website/playwright-report/
          retention-days: 30

  # 性能测试
  performance-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd apps/website
          npm ci

      - name: Build application
        run: |
          cd apps/website
          npm run build

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli

      - name: Start test server
        run: |
          cd apps/website
          npm run preview &
          sleep 10

      - name: Run Lighthouse CI
        run: |
          lhci autorun --config=./lighthouserc.json

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: .lighthouseci/

  # 安全测试
  security-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd apps/website
          npm ci

      - name: Run security audit
        run: |
          cd apps/website
          npm audit --audit-level high

      - name: Run OWASP dependency check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'assaybio-website'
          path: './apps/website'
          format: 'JSON'
          out: 'reports'

      - name: Upload security scan results
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports/