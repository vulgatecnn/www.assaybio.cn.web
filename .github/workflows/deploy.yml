# .github/workflows/deploy.yml

name: CI/CD Deploy to Server

# 触发条件：当代码推送到 main 分支时触发
on:
  push:
    branches: [ "main" ]
  workflow_dispatch: # 允许在 GitHub Actions 页面手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. 登录到 Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. 构建并推送 Docker 镜像
      # 镜像名格式为: your-docker-username/your-repo-name:latest
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/assaybio-website:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 5. 通过 SSH 部署到服务器
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 拉取最新的 Docker 镜像
            docker pull ${{ secrets.DOCKER_USERNAME }}/assaybio-website:latest
            
            # 停止并删除当前正在运行的容器 (如果存在)
            # 使用 || true 确保在容器不存在时命令不会失败
            docker stop assaybio-container || true
            docker rm assaybio-container || true
            
            # 使用新镜像启动一个新容器
            # 将服务器的 80 端口映射到容器的 80 端口
            docker run -d --name assaybio-container -p 80:80 ${{ secrets.DOCKER_USERNAME }}/assaybio-website:latest
            
            # (可选) 清理旧的、未使用的 Docker 镜像，释放磁盘空间
            docker image prune -f
